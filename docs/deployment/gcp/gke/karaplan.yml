apiVersion: v1
kind: Secret
metadata:
  name: karaplan-datasource-secret
type: Opaque
stringData:
  username: karaplan
  password: toComplete
---
apiVersion: v1
kind: Secret
metadata:
  name: karaplan-google-oauth-secret
type: Opaque
stringData:
  clientId: toComplete
  clientSecret: toComplete
---
apiVersion: v1
kind: Secret
metadata:
  name: karaplan-facebook-oauth-secret
type: Opaque
stringData:
  clientId: toComplete
  clientSecret: toComplete
---
apiVersion: v1
kind: Secret
metadata:
  name: karaplan-github-oauth-secret
type: Opaque
stringData:
  clientId: toComplete
  clientSecret: toComplete
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: karaplan-deployment
  labels:
    app: karaplan
spec:
  replicas: 3
  selector:
    matchLabels:
      app: karaplan
  template:
    metadata:
      labels:
        app: karaplan
    spec:
      containers:
      - name: karaplan-container
        image: fcrespel/karaplan:master
        imagePullPolicy: Always
        env:
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              key: username
              name: karaplan-datasource-secret
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: karaplan-datasource-secret
        - name: SPRING_DATASOURCE_URL
          value: jdbc:mysql://toComplete/karaplan?useSSL=false
        - name: SPRING_JPA_DATABASEPLATFORM
          value: org.hibernate.dialect.MySQL5InnoDBDialect
        - name: SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENTID
          valueFrom:
            secretKeyRef:
              key: clientId
              name: karaplan-google-oauth-secret
        - name: SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENTSECRET
          valueFrom:
            secretKeyRef:
              key: clientSecret
              name: karaplan-google-oauth-secret
        - name: SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_FACEBOOK_CLIENTID
          valueFrom:
            secretKeyRef:
              key: clientId
              name: karaplan-facebook-oauth-secret
        - name: SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_FACEBOOK_CLIENTSECRET
          valueFrom:
            secretKeyRef:
              key: clientSecret
              name: karaplan-facebook-oauth-secret
        - name: SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GITHUB_CLIENTID
          valueFrom:
            secretKeyRef:
              key: clientId
              name: karaplan-github-oauth-secret
        - name: SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GITHUB_CLIENTSECRET
          valueFrom:
            secretKeyRef:
              key: clientSecret
              name: karaplan-github-oauth-secret
        ports:
        - containerPort: 8080
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
          tcpSocket:
            port: 8080
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
          httpGet:
            path: /actuator/health
            port: 8080
            scheme: HTTP
        resources:
          limits:
            cpu: '1'
            memory: 1Gi
          requests:
            cpu: '0.5'
            memory: 512Mi
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - karaplan
                topologyKey: kubernetes.io/hostname
              weight: 100
---
apiVersion: cloud.google.com/v1beta1
kind: BackendConfig
metadata:
  name: karaplan-backendconfig
spec:
  timeoutSec: 30
  connectionDraining:
    drainingTimeoutSec: 60
  sessionAffinity:
    affinityType: "GENERATED_COOKIE"
    affinityCookieTtlSec: 0
---
apiVersion: v1
kind: Service
metadata:
  name: karaplan-service
  annotations:
    cloud.google.com/neg: '{"ingress":true}'
    beta.cloud.google.com/backend-config: '{"ports":{"80":"karaplan-backendconfig"}}'
spec:
  type: NodePort
  selector:
    app: karaplan
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 8080
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: karaplan-ingress
  annotations:
    kubernetes.io/ingress.global-static-ip-name: karaplan-gke-ip
    ingress.gcp.kubernetes.io/pre-shared-cert: karaplan-gke-ssl-cert
spec:
  backend:
    serviceName: karaplan-service
    servicePort: 80
